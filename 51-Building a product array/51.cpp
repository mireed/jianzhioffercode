//《剑指offer》51.构建乘积数组
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
题目：给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],其中B中的元素B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]。
     不能使用除法。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
思路：可以把B[i]=A[0]*A[1]*.....*A[i-1]*A[i+1]*.....*A[n-1]。看成A[0]*A[1]*.....*A[i-1]和A[i+1]*.....A[n-2]*A[n-1]两部分的乘积。
     不妨设定C[i]=A[0]*A[1]*...*A[i-1]，D[i]=A[i+1]*...*A[n-2]*A[n-1]。C[i]可以用自上而下的顺序计算出来，即C[i]=C[i-1]*A[i-1]。
     类似的，D[i]可以用自下而上的顺序计算出来，即D[i]=D[i+1]*A[i+1]。
*/

#include <iostream>
#include <vector>

using namespace std;

vector<int> multiply(const vector<int>& A) {
	int length = A.size();
	vector<int> B;
	if (length <= 0) {
		return B;
	}
	B[0] = 1;
	for (int i = 1; i < length; i++) {
		B[i] = B[i - 1] * A[i - 1];
	}
	int temp = 1;
	for (int i = length - 2; i >= 0; i--) {
		temp *= A[i + 1];
		B[i] *= temp;
	}
	return B;
}